<?xml version="1.0" encoding="utf-8"?>
<program xmlns="http://www.kinoma.com/kpr/1">
    
    <skin id="color1" color="#495241" />
    <skin id="color2" color="#B8AE9C" />
    <skin id="color3" color="#8A0917" />
    <skin id="color4" color="#ACCFCC" />
    <skin id="white" color="white" />
    
    <style id="title" font="bold 25px" color="white" align="left,top"/>
    <style id="title2" font="bold 40px" color="#8A0917" align="left,top"/>
    <style id="sensor" font="25px" color="black" align="left,top"/>
    
    <script>
    	var numSensor = 0;
    	var imgOn = [false, false];
    	var TOTAL_SENSORS = 2;
    	var sensorNum = 0; //Keeps track of sensor updating
    	var imgList = [];
    	var soundList = [new Sound( mergeURI( application.url, "media/light1.wav" )), new Sound( mergeURI( application.url, "media/light2.wav" )), new Sound( mergeURI( application.url, "media/light12.wav" )), new Sound( mergeURI( application.url, "media/none.wav" ))];
    </script>
    
	<handler path="/updatePic">
    	<behavior><![CDATA[
        	function onInvoke( handler, message ){
        		var result = message.requestObject;  
        		application.distribute( "onAnalogValueChanged", result ); 		
        	}
        ]]></behavior>
	</handler> 
	
    <container id="body" left="0" top="0" right="0" bottom="0" skin="color1" active="true">
		<text left="0" right="0" top="0" bottom="0" style="title" string="$.text"/>
		<text  left="0" right="0" top="25" bottom="0" style="title" skin="color2" string=""/>
		
		<behavior>
		
			<method id="onCreate" params="container, data"><![CDATA[
				this.data = data;
				//Add Text
				container.add(new Text({left:10, right:0, top:100, bottom:0}, color2, sensor, "Light Sensor 1"));
				container.add(new Text({left:10, right:0, top:200, bottom:0}, color2, sensor, "Light Sensor 2"));
				container.add(new Text({left:175, right:0, top:150, bottom:0}, color2, sensor, "No Light Sensors On"));
				//Add Pictures
				imgList[0] = new Picture({left:0, right:160, top:30 , bottom:150, height:80, width:100}, "media/moon.jpeg");
				imgList[1] = new Picture({left:0, right:160, top:130 , bottom:50, height:80, width:100}, "media/moon.jpeg");
				container.add(imgList[0]);
				container.add(imgList[1]);
				//Add default sound
				this.sound = soundList[3];
			]]></method>
				
			<method id="onTouchEnded" params="container, x, y, ticks">
                <![CDATA[
					//Code to read light sensor data
					this.sound.play();
					//Code to select right sound then play it
                ]]>
            </method>
            
            <method id="onAnalogValueChanged" params="container, result"><![CDATA[
            	/*
            	if(result < 0.5)
            	{
            		if(imgOn[0])
            		{
            			container.remove(imgList[0]);
            			imgOn[0] = false;
            			imgList[0] = new Picture({left:70, right:220, top:30 + 25 * 0, bottom:190 - 25 * 0, height:25, width:25}, "media/moon.jpeg");
            			container.add(imgList[0]);
            			this.sound = soundList[3];
            		}
            	}
            	else
            	{
            		if(!imgOn[0])
            		{
            			container.remove(imgList[0]);
            			imgOn[0] = true;
            			imgList[0] = new Picture({left:70, right:220, top:30 + 25 * 0, bottom:190 - 25 * 0, height:25, width:25}, "media/sun.jpeg");
            			container.add(imgList[0]);
            			this.sound = soundList[0];
            		}
            		
            	}
            	*/
			]]></method>
			
		</behavior>
	</container>
	
    <script>
        <![CDATA[
        	//Sensor Stuff
        	/**
			application.invoke( new MessageWithObject( "pins:configure", {
        	lightSensor: {
                require: "lightSensor",
                pins: {
                    analog: { pin: 52 }
                }
            }
       		}));
			
			application.invoke( new MessageWithObject( "pins:/lightSensor/read?" + 
	            serializeQuery( {       
					repeat: "on",
					interval: 1000,
					callback: "/updatePic"
        	} ) ) );
        	*/
        	application.add( new body({text:"List of Lights"}) );
        ]]>
    </script>
</program>
